@using RemoteUpkeep.Properties
@model RemoteUpkeep.Models.Target

@using (Ajax.BeginForm("CreatePartial", null,
    new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "POST",
        UpdateTargetId = "modal-content",
        OnSuccess = "RefreshTargets(" + Model.OrderId + ");"
    },
    new { @id = "frmModal" }))
{
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="myModalLabel">@Resources.Create</h4>
    </div>

    <div class="modal-body">

        @Html.HiddenFor(model => model.ChangedDateTime)
        @Html.HiddenFor(model => model.ChangedByUserId)

        <div class="form-group">
            @Html.LabelFor(model => model.RegionId, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.RegionId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Geography, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Geography, new { htmlAttributes = new { @class = "form-control" } })
        </div>

    </div>
    <div class="modal-footer">
        <button type="submit" class="btn btn-primary" onclick="if ($('#frmModal').valid()) { $('#modal').modal('hide'); }">@Resources.Save</button>
        <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Close</button>
    </div>
}