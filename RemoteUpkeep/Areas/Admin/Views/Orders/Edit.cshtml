@using RemoteUpkeep.Models
@model Order

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Order</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CreatedDateTime)

    <div class="form-group">
        @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- order details -->

    <div style="padding-bottom: 10px;">
        <button type="button" class="btn btn-default pull-right create-details">New Target</button>
    </div>

    @{
        int i = 0;
        int count = Model.OrderDetails.Count;
    }
    @foreach (var details in Model.OrderDetails)
    {
        Target target = details.Target;

        <h4>Task @(count > 1 ? i.ToString() : "")in @target.Region.Title</h4>

        @Html.HiddenFor(model => Model.OrderDetails[i].OrderId)

        <div class="form-group">
            @Html.LabelFor(model => Model.OrderDetails[i].OrderStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => Model.OrderDetails[i].OrderStatus, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => Model.OrderDetails[i].OrderStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => Model.OrderDetails[i].Target.Id)
        @Html.HiddenFor(model => Model.OrderDetails[i].TargetId)
        @Html.HiddenFor(model => Model.OrderDetails[i].Target.ChangedDateTime)
        @Html.HiddenFor(model => Model.OrderDetails[i].Target.ChangedByUserId)

        <div class="form-group">
            @Html.LabelFor(model => Model.OrderDetails[i].Target.RegionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.OrderDetails[i].Target.RegionId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.OrderDetails[i].Target.RegionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.OrderDetails[i].Target.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.OrderDetails[i].Target.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.OrderDetails[i].Target.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.OrderDetails[i].Target.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.OrderDetails[i].Target.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.OrderDetails[i].Target.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => Model.OrderDetails[i].Target.Geography, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => Model.OrderDetails[i].Target.Geography, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <!-- todo: activities -->

        <!-- todo: messages -->

        i++;
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
