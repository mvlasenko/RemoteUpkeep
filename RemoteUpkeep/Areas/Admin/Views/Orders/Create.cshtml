@using RemoteUpkeep.Models
@model Order

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Order</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.CreatedDateTime)

    <div class="form-group">
        @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- order details -->

    @{
        int i = 0;
    }
    @foreach (var details in Model.OrderDetails)
    {

        <div class="form-group">
            @Html.LabelFor(model => details.OrderStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => details.OrderStatus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => details.OrderStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        Target target = details.Target;

        <div class="form-group">
            @Html.LabelFor(model => target.RegionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => target.RegionId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => target.RegionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => target.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => target.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => target.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => target.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => target.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => target.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => target.Geography, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => target.Geography, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        i++;
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
